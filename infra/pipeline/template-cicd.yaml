AWSTemplateFormatVersion: 2010-09-09
Description: "Simple AWS-only CI pipeline for SAM (build + manual deploy)"

Parameters:
  RepoName:
    Type: String
    Default: cogira-backend
  BranchName:
    Type: String
    Default: main
  ProjectPrefix:
    Type: String
    Default: cogira
  CiEnv:
    Type: String
    Default: dev
    Description: "ENV passed to Makefile (loads env/<ENV>.env)"

Mappings:
  Images:
    Standard:
      Image: "aws/codebuild/standard:7.0"

Resources:
  ArtifactBucket:
    Type: AWS::S3::Bucket

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: { Service: codepipeline.amazonaws.com }
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelineBasic
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !Sub ${ArtifactBucket.Arn}
                  - !Sub ${ArtifactBucket.Arn}/*
              - Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GitPull
                Resource: !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${RepoName}
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource:
                  - !GetAtt BuildProject.Arn
                  - !GetAtt DeployProject.Arn

  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: { Service: codebuild.amazonaws.com }
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BuildBasic
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - !Sub ${ArtifactBucket.Arn}
                  - !Sub ${ArtifactBucket.Arn}/*
              - Effect: Allow
                Action:
                  - codecommit:GetRepository
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GitPull
                Resource: !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${RepoName}

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${ProjectPrefix}-build"
      ServiceRole: !GetAtt BuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspec-build.yml
      Environment:
        Type: LINUX_CONTAINER
        Image: !FindInMap [Images, Standard, Image]
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: ENV
            Type: PLAINTEXT
            Value: !Ref CiEnv

  DeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: { Service: codebuild.amazonaws.com }
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DeployBasic
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:CreateBucket
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                Resource: "*"
              - Effect: Allow
                Action:
                  - codecommit:GetRepository
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GitPull
                Resource: !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${RepoName}
              - Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:CreateStack
                  - cloudformation:UpdateStack
                Resource: !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ProjectPrefix}-*/*
              - Effect: Allow
                Action:
                  - cloudformation:Describe*
                  - cloudformation:List*
                  - cloudformation:GetTemplate
                Resource: "*"
              - Effect: Allow
                Action:
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                  - iam:PutRolePolicy
                  - iam:DeleteRolePolicy
                Resource: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${ProjectPrefix}-*
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${ProjectPrefix}-*
                Condition:
                  StringEquals:
                    iam:PassedToService: lambda.amazonaws.com

  DeployProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${ProjectPrefix}-deploy"
      ServiceRole: !GetAtt DeployRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspec-deploy.yml
      Environment:
        Type: LINUX_CONTAINER
        Image: !FindInMap [Images, Standard, Image]
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: ENV
            Type: PLAINTEXT
            Value: !Ref CiEnv

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${ProjectPrefix}-pipeline"
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Location: !Ref ArtifactBucket
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                RepositoryName: !Ref RepoName
                BranchName: !Ref BranchName
                PollForSourceChanges: true
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref BuildProject
              RunOrder: 1
        - Name: Approve
          Actions:
            - Name: ManualApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref DeployProject
              RunOrder: 1

Outputs:
  PipelineName:
    Value: !Ref Pipeline
  ManualDeployProject:
    Value: !Ref DeployProject
