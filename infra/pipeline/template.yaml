AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: "GitHub OIDC + Deploy Role + Artifacts bucket for cogira-frontend PoC (fixed)"

Parameters:
  RepoFullName:
    Type: String
    Default: hayden74/cogira-frontend
    Description: "GitHub repo in owner/name format"
  BranchName:
    Type: String
    Default: main
  CreateOidcProvider:
    Type: String
    AllowedValues: ["true", "false"]
    Default: "true"
    Description: "Set false if your account already has a GitHub OIDC provider"
  ExistingOidcProviderArn:
    Type: String
    Default: ""
    Description: "Existing OIDC provider ARN (used when CreateOidcProvider=false)"
  ArtifactBucketName:
    Type: String
    Default: cogira-frontend-bucket
    Description: "S3 bucket for SAM packaging/artifacts (must be globally unique)"

Conditions:
  CreateOIDC: !Equals [!Ref CreateOidcProvider, "true"]
  UseExistingOIDC: !Not [!Equals [!Ref ExistingOidcProviderArn, ""]]

Resources:
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref ArtifactBucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault: { SSEAlgorithm: AES256 }
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration: { Status: Enabled }
      Tags:
        - Key: Name
          Value: cogira-frontend-artifacts

  ArtifactBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: DenyInsecureTransport
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !Sub "${ArtifactBucket.Arn}"
              - !Sub "${ArtifactBucket.Arn}/*"
            Condition:
              Bool: { "aws:SecureTransport": false }

  GitHubOIDCProvider:
    Type: AWS::IAM::OIDCProvider
    Condition: CreateOIDC
    Properties:
      Url: "https://token.actions.githubusercontent.com"
      ClientIdList: ["sts.amazonaws.com"]
      ThumbprintList:
        # Standard GitHub OIDC root thumbprint; adjust if your org requires otherwise
        - "6938fd4d98bab03faadb97b34396831e3780aea1"

  GitHubDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: cogira-frontend-github-deploy-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "sts:AssumeRoleWithWebIdentity"
            Principal:
              Federated: !If
                - CreateOIDC
                - !Ref GitHubOIDCProvider
                - !If
                  - UseExistingOIDC
                  - !Ref ExistingOidcProviderArn
                  - "arn:aws:iam::000000000000:oidc-provider/token.actions.githubusercontent.com"
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: "sts.amazonaws.com"
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub "repo:${RepoFullName}:ref:refs/heads/${BranchName}"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Description: "PoC: role assumed by GitHub Actions from ${RepoFullName} on ${BranchName}"
      Tags:
        - Key: Project
          Value: cogira-frontend

Outputs:
  DeployRoleArn:
    Description: "IAM role to assume from GitHub Actions"
    Value: !GetAtt GitHubDeployRole.Arn
  ArtifactBucket:
    Description: "S3 bucket for SAM packaging"
    Value: !Ref ArtifactBucket
  OIDCProviderArn:
    Condition: CreateOIDC
    Value: !Ref GitHubOIDCProvider
